# @package _global_

# path to original working directory
# hydra hijacks working directory by changing it to the current log directory,
# so it's useful to have this path as a special variable
# learn more here: https://hydra.cc/docs/next/tutorials/basic/running_your_app/working_directory
work_dir: ${hydra:runtime.cwd}

# disable ouput directory from being created
hydra:
  output_subdir: null
  run:
    dir: .

# disable main.log from being created
defaults:
  - override hydra/hydra_logging: disabled
  - override hydra/job_logging: disabled
  - _self_

filepath:
  SHP_NAME: null # name of the shapefile used to match tiles to patch
  SHP_DIRECTORY: null # path to the directory containing the shapefile

  OUTPUT_DIR: null # directory of the file with added points, from patchwork.
  OUTPUT_NAME: null # name of the file with added points, from patchwork.

  INPUT_INDICES_MAP_DIR: null
  INPUT_INDICES_MAP_NAME: null

  OUTPUT_INDICES_MAP_DIR: null # path to the directory for the indices map reflecting the changes to the recipient, from patchwork
  OUTPUT_INDICES_MAP_NAME: null # name of the indices map reflecting the changes to the recipient, from patchwork

  RECIPIENT_DIRECTORY: null # directory containing all potential donor lidar files, for lidar selecter
  RECIPIENT_NAME: null # name of the recipient file for patchwork

  # The input shapefile should contain a "nuage_mixa" attrubute for each geometry
  # "nuage_mixa" contains the path to the folder that contains the path to the folder
  # containing the files related to a specific donor source.
  # Laz/las files from this source are usually contained in a subdirectory of "nuage_mixa"
  # path to this subdorectory can be configures using "DONOR_SUBDIRECTORY"
  DONOR_SUBDIRECTORY: "data"


CRS: 2154

DONOR_CLASS_LIST: [2, 22]
RECIPIENT_CLASS_LIST: [2, 6, 9, 17]

RECIPIENT_SUFFIX: "_recipient"
TILE_SIZE: 1000
SHP_X_Y_TO_METER_FACTOR: 1000 # multiplication factor to convert shapefile x, y attributes values to meters
PATCH_SIZE: 1 # size of a patch of the grid. Must be a divisor of TILE_SIZE, so for 1000: 0.25, 0.5, 2, 4, 5, 10, 25...
NEW_COLUMN: null # If not null, contains the name of the new column
NEW_COLUMN_SIZE: 8  # must be 8, 16, 32 or 64
VALUE_ADDED_POINTS: 1 # in case of a new column, value of the new point (the other are set to 0)
VIRTUAL_CLASS_TRANSLATION: {2: 69, 22: 70}  # if there is no new column, translate the class of DONOR_CLASS_LIST into those values
# each value of  DONOR_CLASS_LIST must be a key in VIRTUAL_CLASS_TRANSLATION. Not used if NEW_COLUMN is not None (or "")
